DB 시퀀스에 관한 내용
https://m.blog.naver.com/PostView.nhn?blogId=heartflow89&logNo=220988415124&proxyReferer=https:%2F%2Fwww.google.com%2F

------------------------------------------------------------------------------------------
전체 테이블 조회
SELECT * FROM USER_TABLES;
------------------------------------------------------------------------------------------
테이블 삭제 
drop table 테이블 명;

-----------------------------------------------------------------------------------------
테이블 구조확인
desc 테이블명;
----------------------------------------------------------------------------------------
데이터 삽입
INSERT INTO 테이블명(column1, column2, ...)
VALUES (value1, value2, ...);

-----------------------------------------------------------------------------------------

컬럼 추가 
alter table 테이블 명 add 컬럼명 number(데이터 타입)  ((제약 조건));
---------------------------------------------------------------------------------------
칼럼명 변경
alter table 테이블 명 rename column 이전칼럼명 to 새로운 칼럼명
-----------------------------------------------------------------------------------------

컬럼 삭제 
alter table 테이블명 drop column 컬럼명;
-----------------------------------------------------------------------------------------
foreign key 추가하기 

alter table 테이블명
add constraint 제약조건 이름 ex) fk_board 
foreign key (칼럼명)
references 참조할 테이블 (참조할 테이블의 칼럼명)
-------------------------------------------------------------------------------------

foreign key 삭제하기 
alter table 테이블 명 drop constraint 제약조건 이름;

----------------------------------------------------------------------------------------

제약 조건 조회하기
SELECT * FROM    ALL_CONSTRAINTS
WHERE    TABLE_NAME = '테이블명';

(컬럼에 할당된 제약조건 조회 user_cons_columns)
---------------------------------------------------------------------------------------

refid(reference id)는 반복되는 쿼리를 미리 작성해 놓고 재활용 할 수 있게 해준다.

<include refid ="criteria"></include>

-----------------------------------------------------------------------------------------------
 MyBatis 는 동적 태그 기능을 지원함.

<sql> 동적 sql

<trim prefix="(" suffix=") AND " prefixOverrides="OR">

trim 특정 단어로 시작하는 sql문을 반환하고 싶을 때 사용한다.
prefix는 반환값 앞에 붙이는 접두어, suffix는 뒤에 붙이는 접미어
prefixOverrides는 반환할 값에서 제거해야하는 접두어를 지정한다.

<foreach item(항목)='type' collection(목록)="typeArr">

foreach 목록의 값을 가지고 sql문을 만들때 사용한다. 
Collection속성에는 list나 배열 객체가 온다.


<choose>
	<when test="type == 'T'.toString()">
		title like '%'||#{keyword}||'%'
	</when>
	<when test="type == 'C'.toString()">
		content like '%'||#{keyword}||'%'
	</when>
	<when test="type == 'W'.toString()">
		writer like '%'||#{keyword}||'%'
	</when>
</choose>

choose 검사할 조건이 여러 개일 걍우에 사용한다.
test 속성에 지정된 조건이 참이면 <when> 태그 내용을 반환한다.

-----------------------------------------------------------------------------------------------
서브 쿼리 
sql문장(메인) 안에서 보조로 사용되는 또 다른 select문(서브)을 의미한다.
여러개 사용이 가능하다.
다양한 형태로 사용된다 - select(일반 서브쿼리), from(인라인뷰), where(중첩쿼리),
 insert, update, merge, delete문 안에서 사용이 가능하다.
--------------------------------------------------------------------------------------------

rownum이 where절 전에 나올 수 있도록 서브쿼리를 사용한다

----------------------------------------------------------------------------------------

asc (오름차순)  // desc (내림차순)







